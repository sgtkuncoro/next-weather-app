{"version":3,"file":"static/webpack/static/development/pages/Index.js.978432230d287e185b90.hot-update.js","sources":["webpack:///./components/sections/Forecast.jsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./pages/Index.jsx"],"sourcesContent":["import React from \"react\";\nimport { ListItem, Toolbar, Tabs } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nconst Forecast = ({ forecast, tempClass }) => (\n  <div className={`forecast ${`${tempClass}-forecast`}`}>\n    <div className=\"horiz-menu\">\n      <Toolbar>\n        <Tabs scrollable scrollButtons=\"auto\" className=\"forecast-area\">\n          {forecast.map((day, index) => {\n            let dayNight = \"\";\n            if (\n              parseInt(moment(day.dt_txt).format(\"HH\")) <= 6 ||\n              parseInt(moment(day.dt_txt).format(\"HH\")) >= 19\n            ) {\n              dayNight = \"night\";\n            } else {\n              dayNight = \"day\";\n            }\n            return (\n              <ListItem key={index} className=\"forecast-cell\">\n                <h5>{moment(day.dt_txt).format(\"ddd, hA\")}</h5>\n                {dayNight === \"night\" ? (\n                  <i className={`wi wi-owm-night-${day.weather[0].id}`} />\n                ) : (\n                  <i className={`wi wi-owm-${day.weather[0].id}`} />\n                )}\n                <p>\n                  <strong className=\"temp-text\">\n                    {Math.round(day.main.temp)}&deg;\n                  </strong>\n                </p>\n              </ListItem>\n            );\n          })}\n        </Tabs>\n      </Toolbar>\n    </div>\n  </div>\n);\n\nexport default Forecast;\n","module.exports = require(\"core-js/library/fn/parse-int\");","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","import React from \"react\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\n\nimport Global from \"../components/Global\";\nimport CurrentWeather from \"../components/sections/CurrentWeather\";\nimport Forecast from \"../components/sections/Forecast\";\nimport DetailedInfo from \"../components/sections/DetailInfo\";\n\nrequire(\"dotenv\").config();\n\nconst WEATHER_API_KEY = process.env.WEATHER_API_KEY;\nconst WEATHER_API_URL = process.env.WEATHER_API_URL;\n\nexport default class Index extends React.Component {\n  state = {\n    activeCity: \"Jakarta\",\n    user: null,\n    forecast: [],\n    temperatureUnits: \"metric\",\n    temperatureClass: \"\",\n    savedCities: null,\n    loading: false\n  };\n\n  /** Mount original city  */\n  async componentDidMount() {\n    await this.apiRequest(this.state.activeCity);\n  }\n\n  /** Yahoo! Weather API request  */\n  async apiRequest(cityName) {\n    this.setState({ loading: true });\n    const locationUrl = `${WEATHER_API_URL}/weather?q=${cityName}&units=${\n      this.state.temperatureUnits\n    }&appid=${WEATHER_API_KEY}`;\n\n    await axios\n      .get(locationUrl)\n      .then(result => {\n        const currentConditions = result.data;\n        this.setState({\n          cityName: currentConditions.name,\n          temp: currentConditions.main.temp,\n          iconId: currentConditions.weather[0].id,\n          description: currentConditions.weather[0].main,\n          humidity: currentConditions.main.humidity,\n          time: currentConditions.dt,\n          high: currentConditions.main.temp_max,\n          low: currentConditions.main.temp_min,\n          sunrise: currentConditions.sys.sunrise,\n          sunset: currentConditions.sys.sunset,\n          windSpeed: `${currentConditions.wind.speed} ${\n            this.state.temperatureUnits === \"metric\" ? \"m/s\" : \"mph\"\n          }`\n        });\n        this.setTemperatureClass();\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n        console.log(err);\n      });\n    const forecastUrl = `${WEATHER_API_URL}/forecast?q=${cityName}&units=${\n      this.state.temperatureUnits\n    }&appid=${WEATHER_API_KEY}`;\n\n    axios.get(forecastUrl).then(result => {\n      this.setState({ forecast: result.data.list, loading: false });\n    });\n  }\n\n  /** App city search bar functions  */\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      activeCity: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.apiRequest(this.state.activeCity);\n  }\n\n  /** Set temperature class for color combos  */\n  convertTemperature() {\n    if (this.state.temperatureUnits === \"metric\") {\n      return (this.state.temp * 9) / 5 + 32;\n    } else {\n      return this.state.temp;\n    }\n  }\n\n  setTemperatureClass() {\n    let temp = this.convertTemperature();\n    if (temp >= 100) {\n      this.setState({\n        temperatureClass: \"boiling\"\n      });\n    }\n    if (temp < 100 && temp >= 85) {\n      this.setState({\n        temperatureClass: \"hot\"\n      });\n    }\n    if (temp < 85 && temp >= 65) {\n      this.setState({\n        temperatureClass: \"warm\"\n      });\n    }\n    if (temp < 65 && temp >= 50) {\n      this.setState({\n        temperatureClass: \"perfect\"\n      });\n    }\n    if (temp < 50 && temp >= 32) {\n      this.setState({\n        temperatureClass: \"cool\"\n      });\n    }\n    if (temp < 32) {\n      this.setState({\n        temperatureClass: \"freezing\"\n      });\n    }\n  }\n\n  /** Toggle Celsius and Fahrenheit */\n  changeUnits() {\n    setTimeout(() => {\n      this.state.temperatureUnits === \"imperial\"\n        ? this.setState({ temperatureUnits: \"metric\" })\n        : this.setState({ temperatureUnits: \"imperial\" });\n      this.apiRequest(this.state.activeCity);\n    });\n  }\n\n  /** Add city to database */\n  handleAddCity(e) {\n    e.preventDefault();\n    if (this.state.user != null) {\n      this.citiesRef.push({\n        city: this.state.activeCity,\n        user: this.state.user.email\n      });\n    }\n    this.handleSavedCities();\n  }\n\n  handleCityClick(city) {\n    this.setState({ activeCity: city });\n    this.apiSearch(city);\n  }\n\n  render() {\n    return (\n      <Global>\n        <Head>\n          <title>Next Weather</title>\n        </Head>\n        <CurrentWeather\n          city={this.state.cityName}\n          temp={this.state.temp}\n          iconId={this.state.iconId}\n          description={this.state.description}\n          loading={this.state.loading}\n        />\n        <Forecast\n          forecast={this.state.forecast}\n          tempClass={this.state.temperatureClass}\n        />\n        <DetailedInfo\n          high={this.state.high}\n          low={this.state.low}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          windSpeed={this.state.windSpeed}\n          humidity={this.state.humidity}\n          time={this.state.time}\n        />\n      </Global>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA9BA;AACA;AAoCA;;;;;;;;;;;;ACzCA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;AAUA;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;AAEA;AACA;;;;;;AAAA;;;;;;;;AACA;AAAA;AAAA;AACA;;AAIA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAcA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AACA;;;AAAA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;AAxKA;AACA;;;;;A","sourceRoot":""}